--variable declaration
local MOVE_SPEED = 150

function init(self)
	msg.post(".", "acquire_input_focus")
	
	self.mouse_pos = vmath.vector3()
	self.move_up = false
	self.move_down = false
	self.move_left = false
	self.move_right = false

	self.velocity = vmath.vector3()
end

function update(self, dt)
	--reset velocity
	self.velocity = vmath.vector3()

	--define velocity based on movement input
	if self.move_up == true then
		self.velocity.y = self.velocity.y + 1
	end
	if self.move_down == true then
		self.velocity.y = self.velocity.y - 1
	end
	if self.move_right == true then
		self.velocity.x = self.velocity.x + 1
	end
	if self.move_left == true then
		self.velocity.x = self.velocity.x - 1
	end

	--reset move inputs
	self.move_up = false
	self.move_down = false
	self.move_left = false
	self.move_right = false

	--"normalize" velocity and apply MOVE_SPEED
	--("normalize" essentially means making the vector total equal to 1 in preperation for * by MOVE_SPEED)
	if vmath.length(self.velocity) == 0 then --Avoids / 0 errors by returning early if velocity == 0
		return
	end

	self.velocity = vmath.normalize(self.velocity)
	self.velocity = self.velocity * MOVE_SPEED

	--move the player
	local pos = go.get_position()
	pos = pos + self.velocity * dt
	go.set_position(pos)
end

function on_message(self, message_id, message, sender)
	
end

function on_input(self, action_id, action)
	
	if action.screen_x then
		self.mouse_pos.x = action.screen_x
		self.mouse_pos.y = action.screen_y
	end

	if action_id == hash("move_up") then
		self.move_up = true
	elseif action_id == hash("move_down") then
		self.move_down = true
	elseif action_id == hash("move_left") then
		self.move_left = true
	elseif action_id == hash("move_right") then
		self.move_right = true
	end
end
